<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd   
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd   
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd   
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
">

	<!-- bean扫描路径 -->
	<context:component-scan base-package="indi.lisen" />

	<!-- 启动注解自动注入 -->
	<context:annotation-config />

	<!-- 启动spring-aop自动代理,注解风格支持调用aop代理对像 -->
	<aop:aspectj-autoproxy expose-proxy="true" />

	<!-- 加载初始化配置文件 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config.properties</value>
			</list>
		</property>
	</bean>

	<!-- 导入数据源配置文件 -->
	<import resource="spring-datasource.xml" />
	<import resource="spring-jta-datasource.xml"/>
	<import resource="spring-mybatis.xml"/>

	<!-- springjdbc的JdbcTemplate配置 -->
	<bean id="jdbcTemplate1" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="atomikosDataSource1">
		</property>
	</bean>
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource1">
		</property>
	</bean>
	
	<bean id="jdbcTemplate2" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="atomikosDataSource2">
		</property>
	</bean>


	<!-- atomikos多数据库事务管理器 -->
	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close">
		<property name="forceShutdown" value="true"/>
	</bean>

	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
		<property name="transactionTimeout" value="30000" />
	</bean>

	<!-- spring 事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager">
			<ref bean="atomikosTransactionManager" />
		</property>
		<property name="userTransaction">
			<ref bean="atomikosUserTransaction" />
		</property>
	</bean>
	
	<!-- spring的单数据库事务管理 -->
	<bean id="transactionManager1" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dynamicDataSource"></property>
	</bean>

	<!-- 设置为第二执行 -->
	<tx:annotation-driven transaction-manager="transactionManager"
		order="3" />
		

	<!-- xml配置文件形式的aop，已被注解方式代替 -->
	<!-- <aop:config> -->
	<!-- <aop:pointcut expression="execution(* indi.lisen.service.*Service.* 
		(..))" id="p1"/> -->
	<!-- <aop:aspect ref="timeHandle"> -->
	<!-- <aop:before method="startTime" pointcut-ref="p1" /> -->
	<!-- <aop:after method="endTime" pointcut-ref="p1"/> -->
	<!-- </aop:aspect> -->
	<!-- </aop:config> -->
</beans>